{"version":3,"sources":["context/MyContext.js","components/Form.jsx","components/Header.jsx","context/MyProvider.jsx","components/CategoryCard.jsx","components/pages/Home.jsx","components/MealCard.jsx","components/pages/Meals.jsx","components/pages/Ingredients.jsx","components/pages/SearchResults.jsx","routes/Routes.jsx","index.js"],"names":["MyContext","createContext","Form","navigate","useNavigate","context","useContext","input","setInput","handleSubmit","linkTarget","pathname","key","uuid","state","applied","value","type","onKeyPress","event","code","preventDefault","onChange","target","to","onClick","e","Header","MyProvider","props","useState","categories","setCategories","meals","setMeals","ingredients","setIngredients","search","setSearch","useEffect","getInfo","a","fetch","response","json","data","error","console","log","Provider","children","CategoryCard","category","strCategory","strCategoryThumb","className","src","alt","Home","categoriesList","map","idCategory","MealCard","meal","strMeal","strMealThumb","idMeal","Meals","useLocation","getMeals","mealsList","Ingredients","mealId","strInstructions","getIngredients","ingredientsArray","ingredientObj","ingredient","measurement","i","strIngredient","strMeasure","push","ingredientsList","object","SearchResults","getResults","Routes","path","element","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4b0c9f92.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst MyContext = createContext(null);\n\nexport default MyContext;","import {useContext} from 'react'\nimport MyContext from '../context/MyContext'\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { v4 as uuid } from \"uuid\"\n\n\nconst Form = () => {\n \nconst navigate = useNavigate()\nconst context = useContext(MyContext)\nconst {input, setInput, handleSubmit} = context\n\n// Force the link to refresh even if we're already on the\n// searchresults page.\n// https://stackoverflow.com/a/43986993/1927589\nconst linkTarget = {\n  pathname: \"/searchresults\",\n  key: uuid(), // we could use Math.random, but that's not guaranteed unique.\n  state: {\n    applied: true\n  }\n};\n\nconst checkForEnter = event => {\n  const code = event.code\n  if (code === \"Enter\") {\n    // Act as if the submit search button had been pressed\n    event.preventDefault()\n    handleSubmit()\n    navigate(\"/searchresults\")\n\n  }\n}\n\n    return (\n      <form>\n        <input\n          value={input}\n          type=\"text\"\n          onKeyPress={checkForEnter}\n          onChange={event => setInput(event.target.value)}\n        />\n\n        <Link to={linkTarget}>\n          <button onClick={(e) => handleSubmit(e)}>search</button>\n        </Link>\n      </form>\n    );\n}\n\nexport default Form\n\n\n","import React from 'react'\nimport Form from './Form'\n\n\nconst Header = () => {\n    return (\n        <header>\n        <h1>Welcome to my recipes page</h1>\n        <Form />\n        </header>\n    )\n}\n\nexport default Header\n","import React, {useEffect, useState} from 'react'\n\nimport MyContext from './MyContext'\n\nconst MyProvider = (props) => {\n\n\n    const [categories,setCategories] = useState([])\n    const [meals, setMeals] = useState([])\n    const [ingredients, setIngredients] = useState([])\n    const [input, setInput] = useState(\"\")\n    const [search, setSearch] = useState(\"\")\n\n    const handleSubmit = (e)=>{\n        // e.preventDefault()\n        setSearch(input)\n    }\n\n        useEffect(() =>{\n            try {\n                const getInfo = async () => {\n                    const response = await fetch(\"https://www.themealdb.com/api/json/v1/1/categories.php\")\n                    const data = await response.json()\n                    setCategories(data.categories)\n                \n                }\n               getInfo()\n            } catch (error) {\n                console.log(error)\n            }\n\n             \n        },[])\n\n    return (\n        <MyContext.Provider value={{categories, meals, setMeals, ingredients, setIngredients, handleSubmit, search, input, setInput}}>\n            {props.children}\n        </MyContext.Provider>\n    )\n}\n\nexport default MyProvider\n","import { Link } from 'react-router-dom'\n\n\n\nconst CategoryCard = ({ category }) => {\n    const { strCategory, strCategoryThumb } = category\n\n\n    return (\n        <Link to='/meals' state={strCategory}>\n            <div className='card'>\n            <h3>{strCategory}</h3>\n            <img src={strCategoryThumb} alt={strCategory} />\n\n\n        </div>\n        </Link>\n\n    )\n}\n\nexport default CategoryCard\n","import {useContext} from 'react'\nimport CategoryCard from '../CategoryCard'\n\nimport MyContext from '../../context/MyContext'\n\nconst Home = () => {\n    const context = useContext(MyContext)\n    const  {categories} = context\n\n    const categoriesList = categories.map(category =>  <CategoryCard key={category.idCategory} category={category}/>)\n\n    return (\n        <div className=\"container\">\n            <h1>Food Categories</h1>\n            {categoriesList}\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\n\nimport {Link} from 'react-router-dom'\n\nconst MealCard = ({meal}) => {\n    const {strMeal, strMealThumb, idMeal} = meal\n\n\n\n    return (\n        <Link to='/ingredients' state={idMeal}><div>\n        <h3>{strMeal}</h3>\n        <img src={strMealThumb} alt={strMeal} />\n    </div></Link>\n        \n    )\n}\n\nexport default MealCard\n","import {useContext, useEffect} from 'react'\nimport {useLocation, useNavigate} from 'react-router-dom' //uselocation will be use topick up the state which is in the categorycard\nimport MealCard from '../MealCard'\n\nimport MyContext from '../../context/MyContext'\n\nconst Meals = () => {\n    const location = useLocation()\n    const category = location.state\n    const context = useContext(MyContext)\n\n    const navigate = useNavigate()\n    \n\n    const {meals, setMeals} = context\n\nuseEffect(() =>{\n    try {\n        const getMeals = async () => {\n            const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}` )\n            const data = await response.json()\n            setMeals(data.meals)\n        \n        }\n       getMeals()\n    } catch (error) {\n        console.log(error)\n    }\n\n     \n},[])\n\n\n    const mealsList = meals.map(meal => <MealCard key={meal.idMeal} meal={meal}/>)\n\n\n\n    return (\n        <div>\n            {mealsList}\n            <h3>\n            <button onClick={()=> navigate(\"/\")}>Return to categories</button>\n            </h3>\n        </div>\n    )\n}\n\nexport default Meals\n","import { useEffect, useContext } from 'react'\n\nimport { useLocation,useNavigate } from 'react-router-dom'\nimport MyContext from '../../context/MyContext'\n\nconst Ingredients = () => {\n\n\n    const location = useLocation();\n    const mealId = location.state;\n    const context = useContext(MyContext);\n    const navigate = useNavigate();\n\n\n    const { ingredients, setIngredients } = context\n    const {strMeal, strMealThumb, strInstructions} = ingredients\n\n\n    useEffect(() => {\n        try {\n            const getIngredients = async () => {\n                const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealId}`)\n\n                const data = await response.json()\n                setIngredients(data.meals[0])\n\n            }\n            getIngredients()\n        } catch (error) {\n            console.log(error)\n        }\n\n\n    }, [])\n\n    const ingredientsArray = []\n    let ingredientObj = {ingredient: \"\", measurement: \"\"}\n\n    for (let i = 1; i <= 20; i++) {\n        let strIngredient = \"strIngredient\" + i\n        let strMeasure = \"strMeasure\" + i\n        if (ingredients[strIngredient] !== \"\" && ingredients[strIngredient] !== null) {\n            ingredientObj = {ingredient: ingredients[strIngredient], measurement: ingredients[strMeasure]}\n            ingredientsArray.push(ingredientObj)\n        }\n\n       \n    }\n\n    const ingredientsList = ingredientsArray.map(object => <li>{object.ingredient}---{object.measurement}</li>)\n \n    return (\n       <div> \n        <div>\n          <h2>{strMeal}</h2>\n          <img src={strMealThumb} alt={strMeal} />\n          <p>{strInstructions}</p>\n          <ul>{ingredientsList}</ul>\n          </div>\n        \n        <button className=\"button2\" onClick={() => navigate(-1)}>Return to Meals</button>\n    \n      </div>\n    );\n}\n\nexport default Ingredients\n","import React ,{useEffect, useNavigate, useState, useContext} from 'react'\n\nimport MyContext from '../../context/MyContext'\nimport MealCard from '../MealCard.jsx'\n\nconst SearchResults = () => {\n\n    const context = useContext(MyContext)\n\n    //const navigate = useNavigate()\n    \n\n    const {search} = context\n\n\nconst [ meals, setMeals ] = useState([])\n\nuseEffect(() => {\n  try {\n    const getResults = async () => {\n      const response = await fetch(\n       `https://www.themealdb.com/api/json/v1/1/search.php?s=${search}`\n      );\n      const data = await response.json();\n      setMeals(data.meals || []);\n    \n    };\n    getResults();\n  } catch (error) {\n    console.log(error);\n  }\n}, [search]);\n\n\n\n const mealsList = meals.map(meal => <MealCard key={meal.idMeal} meal={meal}/>)\n\n    return (\n        <div>\n         {mealsList}   \n        </div>\n    )\n}\n\nexport default SearchResults\n","import {HashRouter as Router, Routes as Switch, Route} from 'react-router-dom'\nimport NavBar from '../components/Header'\n\nimport MyProvider from '../context/MyProvider'\nimport Header from '../components/Header'\n\n\nimport Home from '../components/pages/Home'\nimport Meals from '../components/pages/Meals'\nimport Ingredients from '../components/pages/Ingredients'\nimport SearchResults from \"../components/pages/SearchResults\"\n\nconst Routes = () => {\n    return (\n      <MyProvider>\n        <Router>\n          <Header />\n          <Switch>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/meals\" element={<Meals />} />\n            <Route path=\"/ingredients\" element={<Ingredients />} />\n            <Route path=\"/searchresults\" element={<SearchResults />} />\n          </Switch>\n        </Router>\n      </MyProvider>\n    );\n}\n\nexport default Routes\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css'\nimport Routes from './routes/Routes'\n\nReactDOM.render(\n    <Routes />, document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}